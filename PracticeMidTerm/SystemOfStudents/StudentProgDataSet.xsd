<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="StudentProgDataSet" targetNamespace="http://tempuri.org/StudentProgDataSet.xsd" xmlns:mstns="http://tempuri.org/StudentProgDataSet.xsd" xmlns="http://tempuri.org/StudentProgDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="StudentProgConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="StudentProgConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SystemOfStudents.Properties.Settings.GlobalReference.Default.StudentProgConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProgramsTableAdapter" GeneratorDataComponentClassName="ProgramsTableAdapter" Name="Programs" UserDataComponentName="ProgramsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentProgConnectionString (Settings)" DbObjectName="StudentProg.dbo.Programs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Programs] WHERE (([ProgId] = @Original_ProgId) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Programs] ([ProgId], [Name]) VALUES (@ProgId, @Name);
SELECT ProgId, Name FROM Programs WHERE (ProgId = @ProgId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProgId, Name FROM dbo.Programs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Programs] SET [ProgId] = @ProgId, [Name] = @Name WHERE (([ProgId] = @Original_ProgId) AND ([Name] = @Original_Name));
SELECT ProgId, Name FROM Programs WHERE (ProgId = @ProgId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProgId" DataSetColumn="ProgId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="StudentProgConnectionString (Settings)" DbObjectName="StudentProg.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([StudId] = @Original_StudId) AND ([Name] = @Original_Name) AND ([YearEnrolment] = @Original_YearEnrolment) AND ([ProgId] = @Original_ProgId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_YearEnrolment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="YearEnrolment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([StudId], [Name], [YearEnrolment], [ProgId]) VALUES (@StudId, @Name, @YearEnrolment, @ProgId);
SELECT StudId, Name, YearEnrolment, ProgId FROM Students WHERE (StudId = @StudId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@YearEnrolment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="YearEnrolment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudId, Name, YearEnrolment, ProgId FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [StudId] = @StudId, [Name] = @Name, [YearEnrolment] = @YearEnrolment, [ProgId] = @ProgId WHERE (([StudId] = @Original_StudId) AND ([Name] = @Original_Name) AND ([YearEnrolment] = @Original_YearEnrolment) AND ([ProgId] = @Original_ProgId));
SELECT StudId, Name, YearEnrolment, ProgId FROM Students WHERE (StudId = @StudId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@YearEnrolment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="YearEnrolment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_YearEnrolment" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="YearEnrolment" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ProgId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProgId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudId" DataSetColumn="StudId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="YearEnrolment" DataSetColumn="YearEnrolment" />
              <Mapping SourceColumn="ProgId" DataSetColumn="ProgId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="StudentProgDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="StudentProgDataSet" msprop:Generator_DataSetName="StudentProgDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Programs" msprop:Generator_RowEvHandlerName="ProgramsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProgramsRowDeleted" msprop:Generator_RowDeletingName="ProgramsRowDeleting" msprop:Generator_RowEvArgName="ProgramsRowChangeEvent" msprop:Generator_TablePropName="Programs" msprop:Generator_RowChangedName="ProgramsRowChanged" msprop:Generator_RowChangingName="ProgramsRowChanging" msprop:Generator_TableClassName="ProgramsDataTable" msprop:Generator_RowClassName="ProgramsRow" msprop:Generator_TableVarName="tablePrograms" msprop:Generator_UserTableName="Programs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProgId" msprop:Generator_ColumnPropNameInRow="ProgId" msprop:Generator_ColumnPropNameInTable="ProgIdColumn" msprop:Generator_ColumnVarNameInTable="columnProgId" msprop:Generator_UserColumnName="ProgId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_TableVarName="tableStudents" msprop:Generator_UserTableName="Students">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudId" msprop:Generator_ColumnPropNameInRow="StudId" msprop:Generator_ColumnPropNameInTable="StudIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudId" msprop:Generator_UserColumnName="StudId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="YearEnrolment" msprop:Generator_ColumnPropNameInRow="YearEnrolment" msprop:Generator_ColumnPropNameInTable="YearEnrolmentColumn" msprop:Generator_ColumnVarNameInTable="columnYearEnrolment" msprop:Generator_UserColumnName="YearEnrolment" type="xs:int" />
              <xs:element name="ProgId" msprop:Generator_ColumnPropNameInRow="ProgId" msprop:Generator_ColumnPropNameInTable="ProgIdColumn" msprop:Generator_ColumnVarNameInTable="columnProgId" msprop:Generator_UserColumnName="ProgId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Programs" />
      <xs:field xpath="mstns:ProgId" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:StudId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_program" msdata:parent="Programs" msdata:child="Students" msdata:parentkey="ProgId" msdata:childkey="ProgId" msprop:Generator_UserParentTable="Programs" msprop:Generator_UserChildTable="Students" msprop:Generator_RelationVarName="relationfk_program" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_ParentPropName="ProgramsRow" msprop:Generator_UserRelationName="fk_program" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>